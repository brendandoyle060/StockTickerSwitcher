(()=>{"use strict";var t,e,r,o,n,i={199:(t,e,r)=>{r.d(e,{T:()=>o});var o=function(t,e){this.name=t,this.baseUrl=e}},219:(t,e,r)=>{r.d(e,{v:()=>o});var o=function(){function t(t,e,r){this.symbol=t,this.name=e,this.tickerType=r}return t.prototype.toString=function(){return"Ticker - symbol: ".concat(this.symbol,", name: ").concat(this.name,", type: ").concat(this.tickerType)},t}()},110:(t,e,r)=>{r.d(e,{C:()=>o});var o=function(){function t(t){if(this.VALID_TYPES=["stock","etf","mutualfund","crypto","future","bond"],!this.isValidType(t))throw new Error("Invalid tickerType: "+t);this.value=t}return t.prototype.isValidType=function(t){var e=t.toLowerCase().trim();return!!this.VALID_TYPES.includes(e)},t.prototype.toString=function(){return this.value},t}()}},c={};function u(t){var e=c[t];if(void 0!==e)return e.exports;var r=c[t]={exports:{}};return i[t](r,r.exports,u),r.exports}u.d=(t,e)=>{for(var r in e)u.o(e,r)&&!u.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},u.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),e=u(199),r=u(110),o=u(219),t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},t(e,r)},n=function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)},function(t){function e(){return t.call(this,"Robinhood","https://robinhood.com")||this}n(e,t),e.prototype.createUrlForTicker=function(t){return"".concat(this.baseUrl,"/").concat(t.tickerType.value,"/").concat(t.symbol,"/")},e.prototype.getTicker=function(t,e){var r=e.querySelector("title").textContent.split(" ")[0];return new o.v(r,this.getName(e),this.getTickerType(t,e))},e.prototype.getTickerType=function(t,e){return this.isEtf(e)?new r.C("etf"):this.isCrypto(t)?new r.C("crypto"):new r.C("stock")},e.prototype.getName=function(t){return t.querySelector("main header h1").textContent.trim()},e.prototype.isCrypto=function(t){return t.includes("crypto")},e.prototype.isEtf=function(t){return!(null===t.querySelector("#etf-category"))}}(e.T)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,