(()=>{"use strict";var t,e,o={776:(t,e,o)=>{o.d(e,{G:()=>s});var r,n=o(199),i=o(219),c=(r=function(t,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},r(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),s=function(t){function e(){return t.call(this,"Robinhood","https://robinhood.com")||this}return c(e,t),e.prototype.createUrlForTicker=function(t){return"crypto"===t.tickerType.value?"".concat(this.baseUrl,"/").concat(t.tickerType.value,"/").concat(t.symbol):"".concat(this.baseUrl,"/stocks/").concat(t.symbol)},e.prototype.getTicker=function(t,e){return new i.v(this.getTickerFromUrl(t),this.getName(e),this.getTickerType(this,t,e))},e.prototype.getTickerFromUrl=function(t){var e=t.split("/"),o=e.length-1,r=e[o];return 0===r.trim().length&&(r=e[o-1]),r},e.prototype.getName=function(t){return t.querySelector("main h1").textContent.trim()},e.prototype.isCrypto=function(t){return t.includes("crypto")},e.prototype.isEtf=function(t){return!(null===t.querySelector("#etf-category"))},e.prototype.isNoResultsPage=function(t){return t.querySelector("html title").textContent.includes("Page not found")},e}(n.T)},199:(t,e,o)=>{o.d(e,{T:()=>n});var r=o(110),n=function(){function t(t,e){this.name=t,this.baseUrl=e}return t.prototype.is=function(){return this.name},t.prototype.createUrlForTicker=function(t){},t.prototype.getTickerType=function(t,e,o){return t.isEtf(o)?new r.C("etf"):t.isCrypto(e)?new r.C("crypto"):new r.C("stock")},t.prototype.isCrypto=function(t){},t.prototype.isEtf=function(t){},t.prototype.isNoResultsPage=function(t){},t}()},455:(t,e,o)=>{o.d(e,{k:()=>s});var r,n=o(199),i=o(219),c=(r=function(t,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},r(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),s=function(t){function e(){return t.call(this,"YahooFinance","https://finance.yahoo.com")||this}return c(e,t),e.prototype.createUrlForTicker=function(t){var e=t.getHyphenatedTickerSymbol();return"crypto"===t.tickerType.value&&(e+="-USD"),"".concat(this.baseUrl,"/quote/").concat(e)},e.prototype.getTicker=function(t,e){return new i.v(this.getTickerFromPage(e,this.isCrypto(e)),this.getName(e),this.getTickerType(this,e,e))},e.prototype.getQuoteHeaderInfoId=function(){return"#quote-header-info"},e.prototype.getName=function(t){var e=this.getCompanyHeader(t).split(" (")[0];return this.removeExtraWhitespace(e)},e.prototype.getTickerFromPage=function(t,e){var o=this.getCompanyHeader(t).split(" (")[1];return o=o.split(")")[0],e&&(o=o.split("-")[0]),o},e.prototype.getCompanyHeader=function(t){return t.querySelector(this.getQuoteHeaderInfoId()+" h1").textContent.trim()},e.prototype.removeExtraWhitespace=function(t){var e=new RegExp("\\s+"),o=t.split(e),r="";return o.forEach((function(t){r=r+t.trim()+" "})),r.trim()},e.prototype.isCrypto=function(t){return t.querySelector(this.getQuoteHeaderInfoId()+"").textContent.includes("CoinMarketCap")},e.prototype.isEtf=function(t){var e=t.querySelector("#quote-summary");return this.removeExtraWhitespace(e.textContent).includes("Net Assets")},e.prototype.isNoResultsPage=function(t){return!!t.getElementById("lookup-page")},e}(n.T)},219:(t,e,o)=>{o.d(e,{v:()=>r});var r=function(){function t(t,e,o){this.symbol=this.convertHyphenInTickerSymbol(t),this.name=this.removeExtraWhitespace(e),this.tickerType=o}return t.prototype.convertHyphenInTickerSymbol=function(t){return t.replace("-",".")},t.prototype.getHyphenatedTickerSymbol=function(){return this.symbol.replace(".","-")},t.prototype.removeExtraWhitespace=function(t){var e=new RegExp("\\s+"),o=t.split(e),r="";return o.forEach((function(t){r=r+t.trim()+" "})),r.trim()},t.prototype.toString=function(){return"Ticker - symbol: ".concat(this.symbol,", name: ").concat(this.name,", type: ").concat(this.tickerType)},t.prototype.equals=function(t){return this.symbol===t.symbol&&this.nameEquals(t.name)&&this.tickerType.equals(t.tickerType)},t.prototype.nameEquals=function(t){var e=this.name.toLowerCase();return t=t.toLowerCase(),e.includes(t)||t.includes(e)},t}()},110:(t,e,o)=>{o.d(e,{C:()=>r});var r=function(){function t(t){if(this.VALID_TYPES=["stock","etf","mutualfund","crypto","future","bond"],t=t.toLowerCase().trim(),!this.isValidType(t))throw new Error("Invalid tickerType: "+t);this.value=t}return t.prototype.isValidType=function(t){return this.VALID_TYPES.includes(t)},t.prototype.toString=function(){return this.value},t.prototype.equals=function(t){return this.value===t.value},t}()}},r={};function n(t){var e=r[t];if(void 0!==e)return e.exports;var i=r[t]={exports:{}};return o[t](i,i.exports,n),i.exports}n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),t=n(776),e=n(455),chrome.runtime.onMessage.addListener((function(o,r,n){if("clicked_browser_action"===o.message){var i=void 0,c=void 0;if(o.url.toLowerCase().includes("robinhood")?(i=new t.G,c=new e.k):(i=new e.k,c=new t.G),(u=o.url).startsWith("https://robinhood.com/stocks/")||u.startsWith("https://robinhood.com/crypto/")||u.startsWith("https://finance.yahoo.com/quote/")){var s=i.getTicker(o.url,document);console.log(s.toString()),chrome.runtime.sendMessage({message:"open_new_tab",tickerSymbol:s.symbol,tickerName:s.name,tickerType:s.tickerType+"",index:o.index,fromSite:i.is(),toSite:c.is()})}else chrome.runtime.sendMessage({message:"open_homepage",index:o.index,fromSite:i.is(),toSite:c.is()})}var u}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,