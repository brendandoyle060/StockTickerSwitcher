(()=>{"use strict";var t,e,r,o={199:(t,e,r)=>{r.d(e,{T:()=>o});var o=function(t,e){this.name=t,this.baseUrl=e}},455:(t,e,r)=>{r.d(e,{k:()=>c});var o,n=r(199),i=(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),c=function(t){function e(){return t.call(this,"Yahoo! Finance","https://finance.yahoo.com")||this}return i(e,t),e.prototype.createUrlForTicker=function(t){var e=t.symbol;return"crypto"===t.tickerType.value&&(e+="-USD"),"".concat(this.baseUrl,"/quote/").concat(e)},e}(n.T)},219:(t,e,r)=>{r.d(e,{v:()=>o});var o=function(){function t(t,e,r){this.symbol=t,this.name=e,this.tickerType=r}return t.prototype.toString=function(){return"Ticker - symbol: ".concat(this.symbol,", name: ").concat(this.name,", type: ").concat(this.tickerType)},t}()},110:(t,e,r)=>{r.d(e,{C:()=>o});var o=function(){function t(t){if(this.VALID_TYPES=["stock","etf","mutualfund","crypto","future","bond"],!this.isValidType(t))throw new Error("Invalid tickerType: "+t);this.value=t}return t.prototype.isValidType=function(t){var e=t.toLowerCase().trim();return!!this.VALID_TYPES.includes(e)},t.prototype.toString=function(){return this.value},t}()}},n={};function i(t){var e=n[t];if(void 0!==e)return e.exports;var r=n[t]={exports:{}};return o[t](r,r.exports,i),r.exports}i.d=(t,e)=>{for(var r in e)i.o(e,r)&&!i.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),t=i(455),e=i(110),r=i(219),chrome.action.onClicked.addListener((function(t){var e;((e=t.url).startsWith("https://robinhood.com/stocks/")||e.startsWith("https://robinhood.com/crypto/"))&&chrome.tabs.query({active:!0,lastFocusedWindow:!0},(function(e){var r=e[0],o=r.index;chrome.tabs.sendMessage(r.id,{message:"clicked_browser_action",url:t.url,index:o+1})}))})),chrome.runtime.onMessage.addListener((function(o,n,i){if("open_new_tab"===o.message){var c=new t.k,s=new r.v(o.tickerSymbol,o.tickerName,new e.C(o.tickerType));console.log("serviceWorker ticker: "+s.toString());var a=c.createUrlForTicker(s);chrome.tabs.create({url:a,index:o.index})}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,